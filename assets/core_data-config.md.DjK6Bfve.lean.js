import{_ as a,c as i,a0 as t,o as n}from"./chunks/framework.BOr1CWtK.js";const c=JSON.parse('{"title":"data-config组件","description":"","frontmatter":{},"headers":[],"relativePath":"core/data-config.md","filePath":"core/data-config.md"}'),e={name:"core/data-config.md"};function l(h,s,p,r,k,o){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="data-config组件" tabindex="-1">data-config组件 <a class="header-anchor" href="#data-config组件" aria-label="Permalink to &quot;data-config组件&quot;">​</a></h1><ul><li>策划配表读取管理组件</li><li>可基于本地配置文件的方式加载</li><li>可基于redis数据的方式加载</li><li>可基于接口抽像自定义数据源加载</li><li>支持自定义文件格式读取，目前已实现<code>JSON</code>格式读取</li><li>支持缓存热更新</li><li>可自定义类型检测</li><li>可根据<code>go-linq</code>进行数据集合的条件查询</li></ul><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-label="Permalink to &quot;Install&quot;">​</a></h2><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><ul><li>GO &gt;= 1.18</li></ul><h3 id="using-go-get" tabindex="-1">Using go get <a class="header-anchor" href="#using-go-get" aria-label="Permalink to &quot;Using go get&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/cherry-game/cherry/components/data-config@latest</span></span></code></pre></div><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cherryDataConfig </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cherry-game/cherry/components/data-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> demo</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cherry-game/cherry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	cherryDataConfig </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/cherry-game/cherry/components/data-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// RegisterComponent 注册struct到data-config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegisterComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	dataConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cherryDataConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NewComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	dataConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DropList,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DropOne,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//data-config组件注册到cherry引擎</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	cherry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RegisterComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dataConfig)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="example" tabindex="-1">example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;example&quot;">​</a></h2><ul><li><a href="https://github.com/cherry-game/examples/tree/master/test_data_config" target="_blank" rel="noreferrer">示例代码跳转</a></li></ul>`,12)]))}const g=a(e,[["render",l]]);export{c as __pageData,g as default};
